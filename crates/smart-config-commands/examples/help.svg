<!-- Created with term-transcript v0.4.0-beta.1 (https://github.com/slowli/term-transcript) -->
<svg viewBox="0 -22 860 582" width="860" height="582" xmlns="http://www.w3.org/2000/svg">
  <style>
    .container {
      font: 14px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
      line-height: 18px;
    }
    .input,.output,.output-bg {
      white-space: pre;
    }
    .input-bg { fill: #fff; fill-opacity: 0.1; }
    .output-bg { user-select: none; text-rendering: geometricPrecision; stroke-width: 0.1; }
    .scrollbar { fill: #fff; fill-opacity: 0.35; }
    .line-numbers { text-anchor: end; fill-opacity: 0.35; user-select: none; }

    .bold,.prompt { font-weight: 600; }
    .italic { font-style: italic; }
    .underline { text-decoration: underline; }
    .dimmed { fill-opacity: 0.7; }
    .fg0 { fill: #010101; } .output-bg .fg0 { stroke: #010101; }
    .fg1 { fill: #de382b; } .output-bg .fg1 { stroke: #de382b; }
    .fg2 { fill: #38b54a; } .output-bg .fg2 { stroke: #38b54a; }
    .fg3 { fill: #ffc706; } .output-bg .fg3 { stroke: #ffc706; }
    .fg4 { fill: #006fb8; } .output-bg .fg4 { stroke: #006fb8; }
    .fg5 { fill: #762671; } .output-bg .fg5 { stroke: #762671; }
    .fg6 { fill: #2cb5e9; } .output-bg .fg6 { stroke: #2cb5e9; }
    .fg7 { fill: #cccccc; } .output-bg .fg7 { stroke: #cccccc; }
    .fg8 { fill: #808080; } .output-bg .fg8 { stroke: #808080; }
    .fg9 { fill: #ff0000; } .output-bg .fg9 { stroke: #ff0000; }
    .fg10 { fill: #00ff00; } .output-bg .fg10 { stroke: #00ff00; }
    .fg11 { fill: #ffff00; } .output-bg .fg11 { stroke: #ffff00; }
    .fg12 { fill: #0000ff; } .output-bg .fg12 { stroke: #0000ff; }
    .fg13 { fill: #ff00ff; } .output-bg .fg13 { stroke: #ff00ff; }
    .fg14 { fill: #00ffff; } .output-bg .fg14 { stroke: #00ffff; }
    .fg15 { fill: #ffffff; } .output-bg .fg15 { stroke: #ffffff; }
  </style>
  <rect width="100%" height="100%" y="-22" rx="4.5" style="fill: #010101;" />
  <rect width="100%" height="26" y="-22" clip-path="inset(0 0 -10 0 round 4.5)" style="fill: #fff; fill-opacity: 0.1;"/>
  <circle cx="17" cy="-9" r="7" style="fill: #de382b;"/>
  <circle cx="37" cy="-9" r="7" style="fill: #ffc706;"/>
  <circle cx="57" cy="-9" r="7" style="fill: #38b54a;"/>
    <svg x="0" y="10" width="860" height="540" viewBox="0 0 860 540">
      <animate attributeName="viewBox" values="0 0 860 540;0 72 860 540;0 144 860 540;0 216 860 540;0 288 860 540;0 360 860 540;0 432 860 540;0 504 860 540;0 576 860 540;0 648 860 540;0 720 860 540;0 792 860 540;0 864 860 540;0 936 860 540;0 1008 860 540;0 1080 860 540;0 1152 860 540;0 1224 860 540;0 1296 860 540;0 1368 860 540;0 1440 860 540;0 1512 860 540;0 1584 860 540;0 1656 860 540;0 1728 860 540;0 1800 860 540" dur="100.0s" repeatCount="indefinite" calcMode="discrete" />
      <g class="input-bg"></g>
      <text class="container fg7 line-numbers"><tspan x="34" y="14">1</tspan><tspan x="34" y="32">2</tspan><tspan x="34" y="50">3</tspan><tspan x="34" y="68">4</tspan><tspan x="34" y="86">5</tspan><tspan x="34" y="104">6</tspan><tspan x="34" y="122">7</tspan><tspan x="34" y="140">8</tspan><tspan x="34" y="158">9</tspan><tspan x="34" y="176">10</tspan><tspan x="34" y="194">11</tspan><tspan x="34" y="212">12</tspan><tspan x="34" y="230">13</tspan><tspan x="34" y="248">14</tspan><tspan x="34" y="266">15</tspan><tspan x="34" y="284">16</tspan><tspan x="34" y="302">17</tspan><tspan x="34" y="320">18</tspan><tspan x="34" y="338">19</tspan><tspan x="34" y="356">20</tspan><tspan x="34" y="374">21</tspan><tspan x="34" y="392">22</tspan><tspan x="34" y="410">23</tspan><tspan x="34" y="428">24</tspan><tspan x="34" y="446">25</tspan><tspan x="34" y="464">26</tspan><tspan x="34" y="482">27</tspan><tspan x="34" y="500">28</tspan><tspan x="34" y="518">29</tspan><tspan x="34" y="536">30</tspan><tspan x="34" y="554">31</tspan><tspan x="34" y="572">32</tspan><tspan x="34" y="590">33</tspan><tspan x="34" y="608">34</tspan><tspan x="34" y="626">35</tspan><tspan x="34" y="644">36</tspan><tspan x="34" y="662">37</tspan><tspan x="34" y="680">38</tspan><tspan x="34" y="698">39</tspan><tspan x="34" y="716">40</tspan><tspan x="34" y="734">41</tspan><tspan x="34" y="752">42</tspan><tspan x="34" y="770">43</tspan><tspan x="34" y="788">44</tspan><tspan x="34" y="806">45</tspan><tspan x="34" y="824">46</tspan><tspan x="34" y="842">47</tspan><tspan x="34" y="860">48</tspan><tspan x="34" y="878">49</tspan><tspan x="34" y="896">50</tspan><tspan x="34" y="914">51</tspan><tspan x="34" y="932">52</tspan><tspan x="34" y="950">53</tspan><tspan x="34" y="968">54</tspan><tspan x="34" y="986">55</tspan><tspan x="34" y="1004">56</tspan><tspan x="34" y="1022">57</tspan><tspan x="34" y="1040">58</tspan><tspan x="34" y="1058">59</tspan><tspan x="34" y="1076">60</tspan><tspan x="34" y="1094">61</tspan><tspan x="34" y="1112">62</tspan><tspan x="34" y="1130">63</tspan><tspan x="34" y="1148">64</tspan><tspan x="34" y="1166">65</tspan><tspan x="34" y="1184">66</tspan><tspan x="34" y="1202">67</tspan><tspan x="34" y="1220">68</tspan><tspan x="34" y="1238">69</tspan><tspan x="34" y="1256">70</tspan><tspan x="34" y="1274">71</tspan><tspan x="34" y="1292">72</tspan><tspan x="34" y="1310">73</tspan><tspan x="34" y="1328">74</tspan><tspan x="34" y="1346">75</tspan><tspan x="34" y="1364">76</tspan><tspan x="34" y="1382">77</tspan><tspan x="34" y="1400">78</tspan><tspan x="34" y="1418">79</tspan><tspan x="34" y="1436">80</tspan><tspan x="34" y="1454">81</tspan><tspan x="34" y="1472">82</tspan><tspan x="34" y="1490">83</tspan><tspan x="34" y="1508">84</tspan><tspan x="34" y="1526">85</tspan><tspan x="34" y="1544">86</tspan><tspan x="34" y="1562">87</tspan><tspan x="34" y="1580">88</tspan><tspan x="34" y="1598">89</tspan><tspan x="34" y="1616">90</tspan><tspan x="34" y="1634">91</tspan><tspan x="34" y="1652">92</tspan><tspan x="34" y="1670">93</tspan><tspan x="34" y="1688">94</tspan><tspan x="34" y="1706">95</tspan><tspan x="34" y="1724">96</tspan><tspan x="34" y="1742">97</tspan><tspan x="34" y="1760">98</tspan><tspan x="34" y="1778">99</tspan><tspan x="34" y="1796">100</tspan><tspan x="34" y="1814">101</tspan><tspan x="34" y="1832">102</tspan><tspan x="34" y="1850">103</tspan><tspan x="34" y="1868">104</tspan><tspan x="34" y="1886">105</tspan><tspan x="34" y="1904">106</tspan><tspan x="34" y="1922">107</tspan><tspan x="34" y="1940">108</tspan><tspan x="34" y="1958">109</tspan><tspan x="34" y="1976">110</tspan><tspan x="34" y="1994">111</tspan><tspan x="34" y="2012">112</tspan><tspan x="34" y="2030">113</tspan><tspan x="34" y="2048">114</tspan><tspan x="34" y="2066">115</tspan><tspan x="34" y="2084">116</tspan><tspan x="34" y="2102">117</tspan><tspan x="34" y="2120">118</tspan><tspan x="34" y="2138">119</tspan><tspan x="34" y="2156">120</tspan><tspan x="34" y="2174">121</tspan><tspan x="34" y="2192">122</tspan><tspan x="34" y="2210">123</tspan><tspan x="34" y="2228">124</tspan><tspan x="34" y="2246">125</tspan><tspan x="34" y="2264">126</tspan><tspan x="34" y="2282">127</tspan><tspan x="34" y="2300">128</tspan><tspan x="34" y="2318">129</tspan></text>
      <text class="container fg7"><tspan xml:space="preserve" x="42" y="14" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">port</tspan>
</tspan><tspan xml:space="preserve" x="42" y="32" class="output"><tspan class="dimmed">test.</tspan>bind_to
</tspan><tspan xml:space="preserve" x="42" y="50" class="output">  <tspan class="underline">Type</tspan>: integer <tspan class="dimmed">[Rust: u16]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="68" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">8080</tspan>
</tspan><tspan xml:space="preserve" x="42" y="86" class="output">  Port to bind to.
</tspan><tspan xml:space="preserve" x="42" y="104" class="output">
</tspan><tspan xml:space="preserve" x="42" y="122" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">app_name</tspan>
</tspan><tspan xml:space="preserve" x="42" y="140" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: String]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="158" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">"app"</tspan>
</tspan><tspan xml:space="preserve" x="42" y="176" class="output">  Application name.
</tspan><tspan xml:space="preserve" x="42" y="194" class="output">
</tspan><tspan xml:space="preserve" x="42" y="212" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">poll_latency</tspan>
</tspan><tspan xml:space="preserve" x="42" y="230" class="output">  <tspan class="underline">Type</tspan>: string | object <tspan class="dimmed">[Rust: Duration]</tspan>; duration with unit, or object with single unit key
</tspan><tspan xml:space="preserve" x="42" y="248" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">500ms</tspan>
</tspan><tspan xml:space="preserve" x="42" y="266" class="output">
</tspan><tspan xml:space="preserve" x="42" y="284" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">scaling_factor</tspan>
</tspan><tspan xml:space="preserve" x="42" y="302" class="output">  <tspan class="underline">Type</tspan>: integer | float <tspan class="dimmed">[Rust: Option]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="320" class="output">  <tspan class="underline">Validations</tspan>:
</tspan><tspan xml:space="preserve" x="42" y="338" class="output">  - must be in range 0.0..=10.0
</tspan><tspan xml:space="preserve" x="42" y="356" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">None</tspan>
</tspan><tspan xml:space="preserve" x="42" y="374" class="output">
</tspan><tspan xml:space="preserve" x="42" y="392" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">temp_dir</tspan>
</tspan><tspan xml:space="preserve" x="42" y="410" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: PathBuf]</tspan>; filesystem path
</tspan><tspan xml:space="preserve" x="42" y="428" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">"/tmp"</tspan>
</tspan><tspan xml:space="preserve" x="42" y="446" class="output">  <tspan class="underline">Fallbacks</tspan>: env var "TMPDIR"
</tspan><tspan xml:space="preserve" x="42" y="464" class="output">  Directory for temporary stuff.
</tspan><tspan xml:space="preserve" x="42" y="482" class="output">
</tspan><tspan xml:space="preserve" x="42" y="500" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">dir_paths</tspan>
</tspan><tspan xml:space="preserve" x="42" y="518" class="output"><tspan class="dimmed">test.</tspan>dirs
</tspan><tspan xml:space="preserve" x="42" y="536" class="output">  <tspan class="underline">Type</tspan>: string | array <tspan class="dimmed">[Rust: HashSet]</tspan>; set; using ":" delimiter
</tspan><tspan xml:space="preserve" x="42" y="554" class="output">    <tspan class="underline">Array items</tspan>: string <tspan class="dimmed">[Rust: std::path::PathBuf]</tspan>; filesystem path
</tspan><tspan xml:space="preserve" x="42" y="572" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">{}</tspan>
</tspan><tspan xml:space="preserve" x="42" y="590" class="output">  Paths to key directories.
</tspan><tspan xml:space="preserve" x="42" y="608" class="output">
</tspan><tspan xml:space="preserve" x="42" y="626" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">timeout_sec</tspan>
</tspan><tspan xml:space="preserve" x="42" y="644" class="output">  <tspan class="underline">Type</tspan>: integer <tspan class="dimmed">[Rust: Duration]</tspan>; time duration; unit: <tspan class="fg6">seconds</tspan>
</tspan><tspan xml:space="preserve" x="42" y="662" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">60s</tspan>
</tspan><tspan xml:space="preserve" x="42" y="680" class="output">  Timeout for some operation.
</tspan><tspan xml:space="preserve" x="42" y="698" class="output">
</tspan><tspan xml:space="preserve" x="42" y="716" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">cache_size</tspan>
</tspan><tspan xml:space="preserve" x="42" y="734" class="output">  <tspan class="underline">Type</tspan>: string | object <tspan class="dimmed">[Rust: ByteSize]</tspan>; size with unit, or object with single unit key
</tspan><tspan xml:space="preserve" x="42" y="752" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">16 MiB</tspan>
</tspan><tspan xml:space="preserve" x="42" y="770" class="output">  In-memory cache size.
</tspan><tspan xml:space="preserve" x="42" y="788" class="output">
</tspan><tspan xml:space="preserve" x="42" y="806" class="output"><tspan class="dimmed">test.</tspan><tspan class="bold">required</tspan>
</tspan><tspan xml:space="preserve" x="42" y="824" class="output">  <tspan class="underline">Type</tspan>: integer <tspan class="dimmed">[Rust: u64]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="842" class="output">  Required param.
</tspan><tspan xml:space="preserve" x="42" y="860" class="output">
</tspan><tspan xml:space="preserve" x="42" y="878" class="output"><tspan class="bold fg3">test.funding</tspan>
</tspan><tspan xml:space="preserve" x="42" y="896" class="output"><tspan class="fg3">test.funds</tspan>
</tspan><tspan xml:space="preserve" x="42" y="914" class="output">  <tspan class="underline">Config</tspan>: FundingConfig
</tspan><tspan xml:space="preserve" x="42" y="932" class="output">  <tspan class="underline">Validations</tspan>:
</tspan><tspan xml:space="preserve" x="42" y="950" class="output">  - `address` should be non-zero for non-zero `balance`
</tspan><tspan xml:space="preserve" x="42" y="968" class="output">
</tspan><tspan xml:space="preserve" x="42" y="986" class="output"><tspan class="dimmed">test.funding.</tspan><tspan class="bold">address</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1004" class="output"><tspan class="dimmed">test.funds.</tspan>address
</tspan><tspan xml:space="preserve" x="42" y="1022" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: Address]</tspan>; hex string with optional 0x prefix
</tspan><tspan xml:space="preserve" x="42" y="1040" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">0x0000000000000000000000000000000000000000</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1058" class="output">  Ethereum-like address to fund.
</tspan><tspan xml:space="preserve" x="42" y="1076" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1094" class="output"><tspan class="dimmed">test.funding.</tspan><tspan class="bold">balance</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1112" class="output"><tspan class="dimmed">test.funds.</tspan>balance
</tspan><tspan xml:space="preserve" x="42" y="1130" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: U256]</tspan>; 0x-prefixed hex number
</tspan><tspan xml:space="preserve" x="42" y="1148" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">0</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1166" class="output">  Initial balance for the address.
</tspan><tspan xml:space="preserve" x="42" y="1184" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1202" class="output"><tspan class="dimmed">test.funding.</tspan><tspan class="bold">api_key</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1220" class="output"><tspan class="dimmed">test.funds.</tspan>api_key
</tspan><tspan xml:space="preserve" x="42" y="1238" class="output-bg">        <tspan class="fg6">██████</tspan></tspan><tspan xml:space="preserve" x="42" y="1238" class="output">  <tspan class="underline">Type</tspan>: <tspan class="bg6">secret</tspan> string <tspan class="dimmed">[Rust: Option]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1256" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">None</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1274" class="output">  Secret string value.
</tspan><tspan xml:space="preserve" x="42" y="1292" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1310" class="output"><tspan class="dimmed">test.funding.</tspan><tspan class="bold">secret_key</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1328" class="output"><tspan class="dimmed">test.funds.</tspan>secret_key
</tspan><tspan xml:space="preserve" x="42" y="1346" class="output-bg">        <tspan class="fg6">██████</tspan></tspan><tspan xml:space="preserve" x="42" y="1346" class="output">  <tspan class="underline">Type</tspan>: <tspan class="bg6">secret</tspan> string <tspan class="dimmed">[Rust: Option]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1364" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">None</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1382" class="output">  Secret key.
</tspan><tspan xml:space="preserve" x="42" y="1400" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1418" class="output"><tspan class="dimmed">test.nested.</tspan><tspan class="bold">exit_on_error</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1436" class="output">  <tspan class="underline">Type</tspan>: Boolean <tspan class="dimmed">[Rust: bool]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1454" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">true</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1472" class="output">  Whether to exit the application on error.
</tspan><tspan xml:space="preserve" x="42" y="1490" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1508" class="output"><tspan class="dimmed">test.nested.</tspan><tspan class="bold">complex</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1526" class="output">  <tspan class="underline">Type</tspan>: object <tspan class="dimmed">[Rust: ComplexParam]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1544" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">ComplexParam { array: [], map: {} }</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1562" class="output">  Complex parameter deserialized from an object.
</tspan><tspan xml:space="preserve" x="42" y="1580" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1598" class="output"><tspan class="dimmed">test.nested.</tspan><tspan class="bold">more_timeouts</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1616" class="output"><tspan class="dimmed">test.nested.</tspan>timeouts
</tspan><tspan xml:space="preserve" x="42" y="1634" class="output">  <tspan class="underline">Type</tspan>: string | array <tspan class="dimmed">[Rust: Vec]</tspan>; using "," delimiter
</tspan><tspan xml:space="preserve" x="42" y="1652" class="output">    <tspan class="underline">Array items</tspan>: string | object <tspan class="dimmed">[Rust: core::time::Duration]</tspan>; duration with unit, or object with single unit key
</tspan><tspan xml:space="preserve" x="42" y="1670" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">[]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1688" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1706" class="output"><tspan class="dimmed">test.nested.</tspan><tspan class="bold">method_limits</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1724" class="output">  <tspan class="underline">Type</tspan>: array | object <tspan class="dimmed">[Rust: HashMap]</tspan>; map or array of { "method": _, "rps": _ } tuples
</tspan><tspan xml:space="preserve" x="42" y="1742" class="output">    <tspan class="underline">Map keys</tspan>: string <tspan class="dimmed">[Rust: alloc::string::String]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1760" class="output">    <tspan class="underline">Map values</tspan>: integer <tspan class="dimmed">[Rust: core::num::nonzero::NonZero&lt;u32&gt;]</tspan>; non-zero
</tspan><tspan xml:space="preserve" x="42" y="1778" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">{}</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1796" class="output">  Can be deserialized either from a map or an array of tuples.
</tspan><tspan xml:space="preserve" x="42" y="1814" class="output">
</tspan><tspan xml:space="preserve" x="42" y="1832" class="output"><tspan class="dimmed">test.object_store.</tspan><tspan class="bold">type</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1850" class="output">  <tspan class="underline">Type</tspan>: string tag with variants:
</tspan><tspan xml:space="preserve" x="42" y="1868" class="output">  - <tspan class="fg6">'local'</tspan> <tspan class="dimmed">[Rust: ObjectStoreConfig::Local]</tspan> <tspan class="bold">(default)</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1886" class="output">    Stores object locally as files.
</tspan><tspan xml:space="preserve" x="42" y="1904" class="output">  - <tspan class="fg6">'s3'</tspan> <tspan class="dimmed">[Rust: ObjectStoreConfig::S3]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1922" class="output">    Stores objects in AWS S3.
</tspan><tspan xml:space="preserve" x="42" y="1940" class="output">  - <tspan class="fg6">'gcs'</tspan> <tspan class="dimmed">[Rust: ObjectStoreConfig::Gcs]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1958" class="output">    <tspan class="underline">Aliases</tspan>: <tspan class="fg6">'google'</tspan>, <tspan class="fg6">'google_cloud'</tspan>
</tspan><tspan xml:space="preserve" x="42" y="1976" class="output">    Stores objects in Google Cloud Storage.
</tspan><tspan xml:space="preserve" x="42" y="1994" class="output"><tspan class="dimmed">test.object_store.</tspan><tspan class="bold">path</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2012" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: PathBuf]</tspan>; filesystem path
</tspan><tspan xml:space="preserve" x="42" y="2030" class="output">  <tspan class="underline">Tag</tspan>: test.object_store.type == <tspan class="fg6">'local'</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2048" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">"."</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2066" class="output">  Path to the root directory.
</tspan><tspan xml:space="preserve" x="42" y="2084" class="output">
</tspan><tspan xml:space="preserve" x="42" y="2102" class="output"><tspan class="dimmed">test.object_store.</tspan><tspan class="bold">bucket_name</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2120" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: String]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2138" class="output">  <tspan class="underline">Tag</tspan>: test.object_store.type == <tspan class="fg6">'s3'</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2156" class="output">
</tspan><tspan xml:space="preserve" x="42" y="2174" class="output"><tspan class="dimmed">test.object_store.</tspan><tspan class="bold">region</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2192" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: Option]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2210" class="output">  <tspan class="underline">Tag</tspan>: test.object_store.type == <tspan class="fg6">'s3'</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2228" class="output">  <tspan class="underline">Default</tspan>: <tspan class="fg2">None</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2246" class="output">
</tspan><tspan xml:space="preserve" x="42" y="2264" class="output"><tspan class="dimmed">test.object_store.</tspan><tspan class="bold">bucket_name</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2282" class="output">  <tspan class="underline">Type</tspan>: string <tspan class="dimmed">[Rust: String]</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2300" class="output">  <tspan class="underline">Tag</tspan>: test.object_store.type == <tspan class="fg6">'gcs'</tspan>
</tspan><tspan xml:space="preserve" x="42" y="2318" class="output">  Bucket to put objects into.
</tspan></text>
    </svg>
  <rect class="scrollbar" x="853" y="10" width="5" height="40">
    <animateTransform attributeName="transform" attributeType="XML" type="translate" values="0 0;0 20;0 40;0 60;0 80;0 100;0 120;0 140;0 160;0 180;0 200;0 220;0 240;0 260;0 280;0 300;0 320;0 340;0 360;0 380;0 400;0 420;0 440;0 460;0 480;0 500" dur="100.0s" repeatCount="indefinite" calcMode="discrete" />
  </rect>
</svg>
